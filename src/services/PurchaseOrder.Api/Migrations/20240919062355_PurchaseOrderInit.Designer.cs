// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PurchaseOrder.Api.Data;

#nullable disable

namespace PurchaseOrder.Api.Migrations
{
    [DbContext(typeof(PODbContext))]
    [Migration("20240919062355_PurchaseOrderInit")]
    partial class PurchaseOrderInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.33")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PurchaseOrder.Api.Domain.Aggregates.POAggregate.PurchaseOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PurchaseRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("PoOrders");
                });

            modelBuilder.Entity("PurchaseOrder.Api.Domain.Aggregates.POAggregate.PurchaseOrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PurchaseOrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("PurchaseOrderItem");
                });

            modelBuilder.Entity("PurchaseOrder.Api.Domain.Aggregates.PRAggregate.PurchaseRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PoRequests");
                });

            modelBuilder.Entity("PurchaseOrder.Api.Domain.Aggregates.PRAggregate.PurchaseRequestItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PurchaseRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseRequestId");

                    b.ToTable("PurchaseRequestItem");
                });

            modelBuilder.Entity("PurchaseOrder.Api.Domain.Aggregates.POAggregate.PurchaseOrder", b =>
                {
                    b.OwnsOne("PurchaseOrder.Api.Domain.Aggregates.POAggregate.PurchaseOrderStatus", "Status", b1 =>
                        {
                            b1.Property<Guid>("PurchaseOrderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .HasColumnType("int")
                                .HasColumnName("OrderStatus_Code");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("OrderStatus_Name");

                            b1.HasKey("PurchaseOrderId");

                            b1.ToTable("PoOrders");

                            b1.WithOwner()
                                .HasForeignKey("PurchaseOrderId");
                        });

                    b.Navigation("Status")
                        .IsRequired();
                });

            modelBuilder.Entity("PurchaseOrder.Api.Domain.Aggregates.POAggregate.PurchaseOrderItem", b =>
                {
                    b.HasOne("PurchaseOrder.Api.Domain.Aggregates.POAggregate.PurchaseOrder", null)
                        .WithMany("Items")
                        .HasForeignKey("PurchaseOrderId");

                    b.OwnsOne("PurchaseOrder.Api.Shared.Money", "ListPrice", b1 =>
                        {
                            b1.Property<Guid>("PurchaseOrderItemId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("amount")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("ListPrice_Amount");

                            b1.Property<string>("currency")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("ListPrice_Currency");

                            b1.HasKey("PurchaseOrderItemId");

                            b1.ToTable("PurchaseOrderItem");

                            b1.WithOwner()
                                .HasForeignKey("PurchaseOrderItemId");
                        });

                    b.Navigation("ListPrice")
                        .IsRequired();
                });

            modelBuilder.Entity("PurchaseOrder.Api.Domain.Aggregates.PRAggregate.PurchaseRequest", b =>
                {
                    b.OwnsOne("PurchaseOrder.Api.Shared.Money", "Budget", b1 =>
                        {
                            b1.Property<Guid>("PurchaseRequestId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("amount")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("Budget_Amount");

                            b1.Property<string>("currency")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Budget_Currency");

                            b1.HasKey("PurchaseRequestId");

                            b1.ToTable("PoRequests");

                            b1.WithOwner()
                                .HasForeignKey("PurchaseRequestId");
                        });

                    b.OwnsOne("PurchaseOrder.Api.Domain.Aggregates.PRAggregate.PurchaseRequestStatus", "Status", b1 =>
                        {
                            b1.Property<Guid>("PurchaseRequestId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .HasColumnType("int")
                                .HasColumnName("RequestStatus_Code");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("RequestStatus_Name");

                            b1.HasKey("PurchaseRequestId");

                            b1.ToTable("PoRequests");

                            b1.WithOwner()
                                .HasForeignKey("PurchaseRequestId");
                        });

                    b.Navigation("Budget")
                        .IsRequired();

                    b.Navigation("Status")
                        .IsRequired();
                });

            modelBuilder.Entity("PurchaseOrder.Api.Domain.Aggregates.PRAggregate.PurchaseRequestItem", b =>
                {
                    b.HasOne("PurchaseOrder.Api.Domain.Aggregates.PRAggregate.PurchaseRequest", null)
                        .WithMany("Items")
                        .HasForeignKey("PurchaseRequestId");

                    b.OwnsOne("PurchaseOrder.Api.Shared.Money", "ListPrice", b1 =>
                        {
                            b1.Property<Guid>("PurchaseRequestItemId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("amount")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("ListPrice_Amount");

                            b1.Property<string>("currency")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("ListPrice_Currency");

                            b1.HasKey("PurchaseRequestItemId");

                            b1.ToTable("PurchaseRequestItem");

                            b1.WithOwner()
                                .HasForeignKey("PurchaseRequestItemId");
                        });

                    b.Navigation("ListPrice")
                        .IsRequired();
                });

            modelBuilder.Entity("PurchaseOrder.Api.Domain.Aggregates.POAggregate.PurchaseOrder", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("PurchaseOrder.Api.Domain.Aggregates.PRAggregate.PurchaseRequest", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
